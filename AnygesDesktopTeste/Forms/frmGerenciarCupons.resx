<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lelfPCQ7/AAAAABJRU5ErkJggg==
</value>
  </data>
</root>